{"ast":null,"code":"var _jsxFileName = \"G:\\\\Projects\\\\Project2\\\\travel\\\\front_end\\\\src\\\\Components\\\\Chatbots\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Chatbot.scss';\nimport axios from 'axios';\nimport { IoChatboxEllipsesOutline } from \"react-icons/io5\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: 'user',\n      text: input\n    };\n    setMessages([...messages, userMessage]);\n    try {\n      const response = await axios.post('http://localhost:5000/api/chat', {\n        message: input\n      });\n      const botMessage = {\n        sender: 'bot',\n        text: response.data.reply\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error:', error.message);\n      const botError = {\n        sender: 'bot',\n        text: 'Error communicating with the server'\n      };\n      setMessages(prev => [...prev, botError]);\n    }\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(IoChatboxEllipsesOutline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.text\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Ask me something...\",\n        onKeyDown: e => {\n          if (e.key === \"Enter\") handleSend(); // Trigger send on Enter\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","IoChatboxEllipsesOutline","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","handleSend","trim","userMessage","sender","text","response","post","message","botMessage","data","reply","prev","error","console","botError","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","type","value","onChange","e","target","placeholder","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["G:/Projects/Project2/travel/front_end/src/Components/Chatbots/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Chatbot.scss';\r\nimport axios from 'axios';\r\nimport { IoChatboxEllipsesOutline } from \"react-icons/io5\";\r\n\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleSend = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { sender: 'user', text: input };\r\n    setMessages([...messages, userMessage]);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/chat', { message: input });\r\n      const botMessage = { sender: 'bot', text: response.data.reply };\r\n      setMessages((prev) => [...prev, botMessage]);\r\n    } catch (error) {\r\n      console.error('Error:', error.message);\r\n      const botError = { sender: 'bot', text: 'Error communicating with the server' };\r\n      setMessages((prev) => [...prev, botError]);\r\n    }\r\n\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot\">\r\n      <IoChatboxEllipsesOutline />\r\n      <div className=\"chat-window\">\r\n        {messages.map((msg, idx) => (\r\n          <div key={idx} className={`message ${msg.sender}`}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Ask me something...\"\r\n          onKeyDown={(e) => {\r\n            if (e.key === \"Enter\") handleSend(); // Trigger send on Enter\r\n          }}\r\n        />\r\n        <button onClick={handleSend}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}