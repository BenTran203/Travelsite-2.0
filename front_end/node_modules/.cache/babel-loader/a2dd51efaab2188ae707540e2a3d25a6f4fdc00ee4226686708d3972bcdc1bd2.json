{"ast":null,"code":"var _jsxFileName = \"G:\\\\Projects\\\\Project2\\\\travel\\\\front_end\\\\src\\\\Components\\\\Chatbots\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Chatbot.scss';\nimport OpenAI from \"openai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  //Chatbot intergration\n  const openai = new OpenAI({\n    apiKey: process.env.OPENAI_API_KEY\n  });\n  const completion = openai.chat.completions.create({\n    model: \"gpt-4o-mini\",\n    store: true,\n    messages: [{\n      \"role\": \"user\",\n      \"content\": \"write a haiku about ai\"\n    }]\n  });\n  const handleSend = () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: 'user',\n      text: input\n    };\n    setMessages([...messages, userMessage]);\n    setTimeout(() => {\n      const botResponse = {\n        sender: 'bot',\n        text: 'Hello! How can I help you?'\n      };\n      setMessages(prev => [...prev, botResponse]);\n    }, 1000);\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-icon\",\n      children: \"\\uD83D\\uDCAC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.text\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","OpenAI","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","openai","apiKey","process","env","OPENAI_API_KEY","completion","chat","completions","create","model","store","handleSend","trim","userMessage","sender","text","setTimeout","botResponse","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["G:/Projects/Project2/travel/front_end/src/Components/Chatbots/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Chatbot.scss';\r\nimport OpenAI from \"openai\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n\r\n\r\n  //Chatbot intergration\r\n  const openai = new OpenAI({\r\n    apiKey: process.env.OPENAI_API_KEY,\r\n  });\r\n  const completion = openai.chat.completions.create({\r\n    model: \"gpt-4o-mini\",\r\n    store: true,\r\n    messages: [\r\n      {\"role\": \"user\", \"content\": \"write a haiku about ai\"},\r\n    ],\r\n  });\r\n  \r\n  const handleSend = () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { sender: 'user', text: input };\r\n    setMessages([...messages, userMessage]);\r\n\r\n    setTimeout(() => {\r\n      const botResponse = { sender: 'bot', text: 'Hello! How can I help you?' };\r\n      setMessages((prev) => [...prev, botResponse]);\r\n    }, 1000);\r\n\r\n    setInput('');\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"chatbot\">\r\n      <div className=\"chat-icon\">ðŸ’¬</div>\r\n      <div className=\"chat-window\">\r\n        {messages.map((msg, idx) => (\r\n          <div key={idx} className={`message ${msg.sender}`}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <button onClick={handleSend}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}